{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "\n",
    "def score_game(game_core):\n",
    "    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''\n",
    "    count_ls = []\n",
    "    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!\n",
    "    random_array = np.random.randint(1, 101, size=(1000))\n",
    "    for number in random_array:\n",
    "        count_ls.append(game_core(number))\n",
    "    score = int(np.mean(count_ls))\n",
    "    print(f\"Ваш алгоритм угадывает число в среднем за {score} попыток\")\n",
    "    return (score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def game_core_v3(number):\n",
    "    '''После каждой попытки угадать число делим интервал пополам,\n",
    "    проверям в какой половине число, делим данные интервал на 2 и т.д'''\n",
    "    count = 0\n",
    "    first_value = 1  # задаем начальное значение диапазона\n",
    "    last_value = 101  # задаем конечное значение диапазона\n",
    "    mean = 0\n",
    "    while number != mean:\n",
    "        count += 1\n",
    "        mean = (first_value + last_value) / 2\n",
    "        if number > int(mean):\n",
    "            first_value = int(mean)\n",
    "        elif number < int(mean):\n",
    "            last_value = int(mean)\n",
    "        else:\n",
    "            return count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ваш алгоритм угадывает число в среднем за 5 попыток\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score_game(game_core_v3)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

import numpy as np


def score_game(game_core):
    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1, 101, size=(1000))
    for number in random_array:
        count_ls.append(game_core(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return (score)


def game_core_v3(number):
    '''После каждой попытки угадать число делим интервал пополам,
    проверям в какой половине число, делим данные интервал на 2 и т.д'''
    count = 0
    first_value = 1  # задаем начальное значение диапазона
    last_value = 101  # задаем конечное значение диапазона
    mean = 0
    while number != mean:
        count += 1
        mean = (first_value + last_value) / 2
        if number > int(mean):
            first_value = int(mean)
        elif number < int(mean):
            last_value = int(mean)
        else:
            return count


score_game(game_core_v3)

# module_0
Программа, угадывающая случайно загаданное число в диапазоне от 1 до 100 и выводящая среднее число попыток угадываний
